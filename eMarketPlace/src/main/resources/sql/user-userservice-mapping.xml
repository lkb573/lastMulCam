<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"> 

<mapper namespace="User">
	<!--  회원 테이블과 클래스 UserVO 매핑 -->
	<resultMap id="userResult" type="userVO">
		<id property="userId" column="USER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="password" column="PASSWORD"/>
		<result property="ssn" column="SSN"/>
		<result property="slYn" column="SL_YN"/>
		<result property="birthDay" column="BIRTH_DAY"/>
		<result property="age" column="AGE"/>
		<result property="cellPhone" column="CELL_PHONE"/>
		<result property="addr" column="ADDR"/>
		<result property="email" column="EMAIL"/>
		<result property="emailYn" column="EMAIL_YN"/>
		<result property="imageFile" column="IMAGE_FILE"/>
		<result property="regDate" column="REG_DATE"/>
	</resultMap>

	<!--  Query : 검색 조건에 기반하여 회원 목록 조회 -->
	<select id="getUserList" parameterType="userVO" resultMap="userResult">
		SELECT USER_ID, USER_NAME, SSN, CELL_PHONE, EMAIL
		FROM USERS
		<if test="userId != null">
			WHERE USER_ID like #{userId} 
		</if>
		<if test="userId == null">
			WHERE USER_NAME like #{userName} 
		</if>
		ORDER BY USER_NAME
	</select>
	
	<!--  Query : 검색 조건에 기반한 회원수 조회 -->
	<select id="getUserListCnt" parameterType="userVO" resultType="java.lang.Integer">
		SELECT COUNT(*) CNT 
		FROM USERS
		<if test="userId != null">
			WHERE USER_ID like #{userId} 
		</if>
		<if test="userId == null">
			WHERE USER_NAME like #{userName} 
		</if>
	</select>
	
	<!--  Query : 신규 회원 등록 -->
	<insert id="addUser" parameterType="userVO">
		INSERT INTO USERS 
			(USER_ID, 
			USER_NAME, 
			PASSWORD, 
			ROLE, 
			SSN, 
			SL_YN, 
			BIRTH_DAY, 
			AGE, 
			CELL_PHONE, 
			ADDR, 
			EMAIL, 
			EMAIL_YN, 
			IMAGE_FILE, 
			REG_DATE) 
		VALUES (
			#{userId}, 
			#{userName}, 
			#{password}, 
			'user', 
			#{ssn}, 
			#{slYn}, 
	        #{birthDay}, 
	        #{age}, 
	        #{cellPhone}, 
	        #{addr}, 
	        #{email}, 
	        #{emailYn}, 
	        #{imageFile}, 
	        sysdate)
	</insert>	
	
	<!--  Query : 회원 정보 수정 -->	
	<update id="updateUser" parameterType="userVO">
		UPDATE USERS 
		SET USER_NAME = #{userName}, SSN = #{ssn}, SL_YN = #{slYn}, BIRTH_DAY = #{birthDay}, AGE = #{age}, CELL_PHONE = #{cellPhone}, ADDR = #{addr}, EMAIL = #{email}, EMAIL_YN = #{emailYn}
		WHERE USER_ID = #{userId}				
	</update>	
	
	<!--  Query : 회원 ID 중복 등록 여부 체크 -->	
	<select id="checkDuplication" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) count
		FROM USERS
		WHERE USER_ID = #{userId}
	</select>	
	
	<!--  Query : 회원 상세 정보 조회 -->
	<select id="getUser" parameterType="java.lang.String" resultMap="userResult">
		SELECT USER_ID, USER_NAME, PASSWORD, SSN, SL_YN, BIRTH_DAY, AGE, CELL_PHONE, ADDR, EMAIL, EMAIL_YN, IMAGE_FILE, REG_DATE
		FROM USERS
		WHERE USER_ID = #{userId} 
	</select>						
</mapper>